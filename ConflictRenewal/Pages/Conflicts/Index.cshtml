@page
@model ConflictRenewal.Pages.Conflicts.IndexModel
@inject UserManager<IdentityUser> UserManager
@using ConflictRenewal.Models
@{
    ViewData["Title"] = "Index";
  //  Layout = null;
}

<h2>Index</h2>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table table-responsive">
    <thead>
        <tr>
            @if (Model.Conflictview.isAdmin == true)
            {
                <th>
                    Email Id
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].ConflictDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question3)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question4)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question5)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].Question6)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].MostrecentjournalDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Conflictview.Conflict[0].ConflictStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Conflictview.Conflict)
        {
            <tr>
                @if (item.AdminRole == RoleEnum.Admin.ToString())
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailID)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.ConflictDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question4)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question5)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Question6)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MostrecentjournalDate)
                </td>
                <td>
                    @if (Model.Conflictview.isAdmin == true)
                    {
                        @if (item.ConflictStatus == 0)
                        {
                            <label>Unresolved</label>
                        }
                        if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.Resolved))
                        {
                            <label>Resolved</label>
                        }
                        else if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.Unresolved))
                        {
                            <label>Unresolved</label>
                        }
                        else if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.ActionRequired))
                        {
                            <label>Action Required</label>
                        }
                    }
                    else
                    {
                        @if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.Resolved))
                        {
                            <label>Resolved</label>
                        }
                        else if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.Unresolved))
                        {
                            <label>Unresolved</label>
                        }
                        else if (item.ConflictStatus == Convert.ToInt32(ConflictStatusEnum.ActionRequired))
                        {
                            <label>Action Required</label>
                        }
                        else
                        {
                            <label>Unresolved</label>
                        }
                    }
                </td>
                <td>
                    @*<a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |*@
                    <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-primary">View</a>
                    <a onClick="GetAuditHistory(@item.Id)" class="btn btn-success">Audit History</a>
                    @*|<a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>*@
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .modal-backdrop.in {
        filter: alpha(opacity=50);
        opacity: 0 !important;
    }
</style>


<!-- Modal HTML -->
<div class="modal fade" id="myModal">
    <div class="modal-dialog" style="max-width:80%; width:80%">
        <div class="modal-content">
            <div class="modal-header" role="dialog">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Audit history</h4>
            </div>
            <div class="modal-body" style="max-height:500px;overflow-y: auto;">
                <div id="audit"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"
      rel="stylesheet">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>


@*<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>*@

<script>


    function GetAuditHistory(recordID) {
        $("#audit").html("");

        var AuditDisplay = "<table class='table table-condensed' cellpadding='5'>"; // should be done with cleaner dom object construction ... but hey, its an article, not production :)
        $.ajax({
            type: "GET",
            url: "/Conflicts/AuditTrail/",
            data: { id: recordID, },
            contentType: "application/json",
            dataType: "json",
            success: function (AuditTrail) {
                debugger;
                if (AuditTrail != "" || AuditTrail != null) {
                   
                    for (var i = 0; i < AuditTrail.length; i++) {
                        AuditDisplay = AuditDisplay + "<tr class='active'><td colspan='2'>Event date: " + AuditTrail[i].dateTimeStamp + "</td>";
                        AuditDisplay = AuditDisplay + "<td>Action type: " + AuditTrail[i].auditActionTypeName + "</td></tr>";
                        AuditDisplay = AuditDisplay + "<tr class='text-warning'><td>Field name</td><td>Before change</td><td>After change</td></tr>";
                        if (AuditTrail[i].changes != null && AuditTrail[i].changes.length > 0) {
                            for (var j = 0; j < AuditTrail[i].changes.length; j++) {
                                AuditDisplay = AuditDisplay + "<tr>";
                                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].changes[j].fieldName + "</td>";
                                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].changes[j].valueAfter + "</td>";
                                AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].changes[j].valueAfter + "</td>";
                                AuditDisplay = AuditDisplay + "</tr>";
                            }
                        }
                    }

                    AuditDisplay = AuditDisplay + "</table>";
                }
                if (AuditTrail.length == 0) {
                    AuditDisplay = "<p>No history found!!</p>";
                }
               
                    $("#audit").html(AuditDisplay);

                //jQuery.noConflict();
                //var jq = jQuery.noConflict();
                debugger;
                $("#myModal").modal('show');
            },
            failure: function (response) {
                alert(response);
            }
        });


        //$("#audit").html("");
        //var AuditDisplay = "<table class='table table-condensed' cellpadding='5'>"; // should be done with cleaner dom object construction ... but hey, its an article, not production :)
        //$.getJSON("/Conflicts/AuditTrail/" + recordID, function (AuditTrail) {

        //for (var i = 0; i < AuditTrail.length; i++) {
        //    AuditDisplay = AuditDisplay + "<tr class='active'><td colspan='2'>Event date: " + AuditTrail[i].DateTimeStamp + "</td>";
        //    AuditDisplay = AuditDisplay + "<td>Action type: " + AuditTrail[i].AuditActionTypeName + "</td></tr>";
        //    AuditDisplay = AuditDisplay + "<tr class='text-warning'><td>Field name</td><td>Before change</td><td>After change</td></tr>";
        //    for (var j = 0; j < AuditTrail[i].Changes.length; j++) {
        //        AuditDisplay = AuditDisplay + "<tr>";
        //        AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].FieldName + "</td>";
        //        AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].ValueBefore + "</td>";
        //        AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].ValueAfter + "</td>";
        //        AuditDisplay = AuditDisplay + "</tr>";
        //    }
        //}
        //AuditDisplay = AuditDisplay + "</table>" >
        //    $("#audit").html(AuditDisplay);
        //$("#myModal").modal('show');


        //});
    }

    function DeleteRecord(recordID) {
        $.get("/home/delete/" + recordID); // should have return on success etc
        $('#' + recordID).remove();
    }

    function ShowDeleted() {
        window.location.assign('/?ShowDeleted=True');
    }

    function NewRecord() {
        window.location.assign('/home/create');
    }
    //});

</script>

