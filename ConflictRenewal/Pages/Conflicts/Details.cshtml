@page
@model ConflictRenewal.Pages.Conflicts.DetailsModel
@inject UserManager<IdentityUser> UserManager
@using ConflictRenewal.Models

@{
    ViewData["Title"] = "Details";
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<h2>Details</h2>

<div>
    <h4>Conflict</h4>
    <hr />
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Conflict.ConflictDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.ConflictDate)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question1)*@
            1. Describe the situation that triggered your strong emotional response.
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question1)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question2)*@
            2. Feel the full intensity of your emotional experience and journal it here.
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question2)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question3)*@
            3. Create a healthy conflict statement. I feel _________ when _________.
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question3)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question4)*@
            4. Create a desired outcome statement that will guide you toward permanently resolving your conflict. I want __________.
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question4)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question5)*@
            5. Create and rehearse a solution that fully resolves your conflict.
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question5)
        </dd>
        <dt>
            @*Html.DisplayNameFor(model => model.Conflict.Question6)*@
            6. What steps are you taking to ensure a permanent solution to your conflict?
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conflict.Question6)
        </dd>
        <dd>
            <a asp-page="./Edit" asp-route-id="@Model.Conflict.Id" class="btn btn-outline-info">Edit</a>
            <a asp-page="./Delete" asp-route-id="@Model.Conflict.Id" class="btn btn-outline-info">Delete</a>
        </dd>
        <dd>
            <table class="table">
                <tr>
                    <th colspan="2">Journal entries</th>
                    @*<th>Entry</th>*@
                </tr>
                @foreach (var item in Model.Conflict.Journals)
                {
                    <tr>
                        @if (item.AdminRole == RoleEnum.Admin.ToString())
                        {
                            <td style="background-color: #e9ecec;">
                                @Html.DisplayFor(modelItem => item.JournalDate)
                            </td>
                            <td style="background-color: #e9ecec;">
                                @Html.DisplayFor(modelItem => item.JournalContent)
                            </td>
                            @if (item.UserRole == RoleEnum.Admin.ToString())
                            {
                                <td style="background-color: #e9ecec;">
                                    <a asp-route-id="@item.Id" class="btn btn-outline-info click" asp-page-handler="Edit">Edit</a>
                                    <a asp-route-id="@item.Id" class="btn btn-outline-info click" asp-page-handler="Delete">Delete</a>
                                </td>
                            }
                            else
                            {
                                <td style="background-color: #e9ecec;"></td>
                            }
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.JournalDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.JournalContent)
                            </td>
                            <td>
                                <a asp-route-id="@item.Id" class="btn btn-outline-info click" asp-page-handler="Edit">Edit</a>
                                <a asp-route-id="@item.Id" class="btn btn-outline-info click" asp-page-handler="Delete">Delete</a>
                            </td>
                        }

                    </tr>
                }
            </table>
        </dd>
    </dl>
    <hr />
    <h4>Create Journal</h4>
    <div class="row">
        <div class="col-md-6">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="journal.Id" />
                <input type="hidden" asp-for="journal.ConflictId" />
                @*<div class="form-group">
                        <label asp-for="journal.JournalDate" class="control-label"></label>
                        <input asp-for="journal.JournalDate" class="form-control" />
                        <span asp-validation-for="journal.JournalDate" class="text-danger"></span>
                    </div>*@

                <div class="form-group">
                    <label asp-for="journal.JournalContent" class="control-label"></label>
                    <textarea id="textarea" asp-for="journal.JournalContent" class="form-control focus" rows="6"></textarea>
                    <span asp-validation-for="journal.JournalContent" class="text-danger"></span>
                </div>
                @if (Model.Isadmin == RoleEnum.User.ToString()) { 
                <div class="form-group">
                    <label asp-for="journal.ConflictStatus" class="control-label"></label>
                    <input asp-for="journal.ConflictStatus" type="checkbox" />
                    <span asp-validation-for="journal.ConflictStatus" class="text-danger"></span>
                </div>
                }
                <div class="form-group">
                    @if (Model.journal.Id == 0)
                    {
                        <input type="submit" value="Add journal entry" class="btn btn-primary" />
                    }
                    else
                    {
                        <input type="submit" value="Update" class="btn btn-primary" id="button" asp-page-handler="Edit" />
                    }
                </div>
            </form>
        </div>
    </div>
</div>
<div>
    <a asp-page="./Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    $(document).ready(function () {
        if ($("#button").val() === "Update") {
            $('#textarea').focus();
        }
    });
</script>